{
	"name": "CogSvc_TextSentiment",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "sparkpool1",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2
		},
		"metadata": {
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/yifso-workspace/providers/Microsoft.Synapse/workspaces/yifsoeus2euap/bigDataPools/sparkpool1",
				"name": "sparkpool1",
				"type": "Spark",
				"endpoint": "https://yifsoeus2euap.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/sparkpool1",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 10,
				"cores": 8,
				"memory": 56
			}
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"from mmlspark.cognitive import *\n",
					"\n",
					"# Fetch the subscription key (or a general Cognitive Service key) from Azure Key Vault\n",
					"service_key = sc._jvm.com.microsoft.azure.synapse.tokenlibrary.TokenLibrary.getAkvSecret(\"AzureKeyVault1\", \"yifso-akv\", \"yifso-text-analytics-secret\")\n",
					"\n",
					"# Load the data into a Spark DataFrame\n",
					"df = spark.sql(\"SELECT * FROM default.textsentimentdata\")\n",
					"\n",
					"sentiment = (TextSentiment()\n",
					"    .setLocation(\"westus2\")\n",
					"    .setSubscriptionKey(service_key)\n",
					"    .setOutputCol(\"output\")\n",
					"    .setErrorCol(\"error\")\n",
					"    .setLanguage(\"en\")\n",
					"    .setTextCol(\"text\"))\n",
					"\n",
					"results = sentiment.transform(df)\n",
					"\n",
					"# Show the results\n",
					"display(results.select(\"text\", \"output\", \"error\").limit(5))\n",
					"\n",
					"results.write.mode(\"overwrite\").saveAsTable(\"TextSentimentResult\")"
				],
				"execution_count": 11
			}
		]
	}
}